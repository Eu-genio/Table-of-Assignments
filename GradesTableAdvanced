<!DOCTYPE> 
<title>Student Grades</title>
<table id ="Student" align = "center">

<thead>

<tr>

<th>Student Name</th>
<th>Student ID</th>
<th>Assignment 1</th>
<th>Final Grade</th>

</tr>

</thead>
<tbody>

<tr>

<td class = 'name' contenteditable='true'></td>
<td class = 'name' contenteditable='true'></td>
<td><input type = "number" placeholder="-" min = '0' max = '100' onchange = "limit(this)" onkeyup = "Average()"></td>
<td>%</td>

</tr>

</tbody>
</table>

<center><button class = "name" type = "button" onclick = "Average()">Calculate final grade</button></center>
<center><button class = "name" type = "button" onclick = "addRow()">Add Row</button></center>
<center><button class = "name" type = "button" onclick = "addColumn()">Add Column</button></center>
<center><button class = "name" type = "button" onclick = "saveTable()">Save Table</button></center>
<center><button class = "name" type = "button" onclick = "LoadTable()">Load Table</button></center>
<center><button class = "name" type = "button" onclick = "deleteRow()">Delete Row</button></center>
<center><button class = "name" type = "button" onclick = "deleteColumn()">Delete Column</button></center>

<script>
function limit(input){
	if(input.value < 0)
  {
 	 input.value = '-';
   Average();
  }
  if(input.value > 100)
  {
	  input.value = '-';
    Average();
  }
  else
  {
	  input.value = Math.round(input.value);
  }
}
//bit of help from online
function Average()
{
var table = document.getElementById("Student");
var rlength = table.rows.length;
var clength = table.rows[1].cells.length;

  for(var row = 1;row<rlength;row++)
	{
    var sum = 0; 
    for(var cell = 2;cell<clength-1;cell++)
    {
    	var x = table.rows[row].cells[cell].children[0].value;
      var add = parseFloat(x);
      if(!isNaN(add))
      {
      	sum+=add;
      }
    }
  var avg = sum/(clength-3); 
  if(avg < 40){
  	document.getElementById("Student").rows[row].cells[clength-1].style.backgroundColor = "red";
    document.getElementById("Student").rows[row].cells[clength-1].style.color = "white";
	  document.getElementById("Student").rows[row].cells[clength-1].innerHTML = ("<td>" + Math.round(avg) + "%</td>");
  }
  else
  {
  document.getElementById("Student").rows[row].cells[clength-1].style.color = "black"
  document.getElementById("Student").rows[row].cells[clength-1].style.backgroundColor = "white";
  	document.getElementById("Student").rows[row].cells[clength-1].innerHTML = ("<td>" + Math.round(avg) + "%</td>");
  }
	}
}
//help from w3schools
function addRow()
{
  var table = document.getElementById("Student");
  var rlength = table.rows.length;
  var clength = table.rows[0].cells.length;
  //function for creating a new row using insertRow and a recursive method
  table.insertRow(rlength).innerHTML = recursion(clength);
  for(var i = 0;i < clength;i++){
  //different if statements for the different types of columns
   if(i <= 1){
  	table.rows[rlength].cells[i].outerHTML = "<td class = 'name' contenteditable='true'></td>";
    }
    else if(i>1 && i<clength-1)
    {
    table.rows[rlength].cells[i].innerHTML = "<td><input type = 'number' placeholder='-' min = '0' max = '100' onchange = 'limit(this)' onkeyup = 'Average()'</td>";
    }
    else{
    table.rows[rlength].cells[i].innerHTML = ("<td>%</td>");
    }
  }
}
//help from w3schools and mredkj.com
function addColumn(){
var table = document.getElementById("Student");
var rlength = table.rows.length;
var clength = table.rows[0].cells.length;

for(var i = 0;i<rlength;i++)
{
if(i == 0){
  	table.rows[i].insertCell(clength-1).outerHTML = "<th>Assignment " + (clength-2) + "</th>";
  }
  else if(i > 0){
  table.rows[i].insertCell(clength-1).innerHTML = "<td><input type = 'number' placeholder='-' min = '0' max = '100' onchange = 'limit(this)' onkeyup = 'Average()'</td>";
 	}
 }
}
//my own idea to use recursion
function recursion(n){
if(n==1){
  return '<td></td>';
  }
  else{
  return recursion(n-1)+'<td></td>';
  }
}

function saveTable()
{
 	var table = document.getElementById("gradeTable");
  
  var cookieRow = table.rows.length;
  var cookieColumn = table.rows[0].cells.length;
  
  var dimensions = cookieRow+","+cookieColumn;
  setCookie("dimensions", dimensions, 9001);
}

function loadTable()
{
	var table = document.getElementById("gradeTable");
  
  var cookieRow2 = table.rows.length;
  var cookieColumn2 = table.rows[0].cells.length;

	var dimensions = getCookie("dimensions");
  var spl = dimensions.split(",");
  
  if(spl[0]>cookieRow2)
  {
  	while(spl[0]>cookieRow2)
    {
    	addRow();
      cookieRow2 = table.rows.length;
    }
  }
  
  else
  {
  	while(spl[0]<cookieRow2)
    {
    	deleteRow();
      cookieRow2 = table.rows.length;
	}
  }
  
  if(spl[1]>cookieColumn2)
  {
  	while(spl[1]>cookieColumn2)
    {
    	addColumn();
      cookieColumn2 = table.rows[0].cells.length;
    }
  }
  
  else
  {
  	while(spl[1]<cookieColumn2)
    {
    	deleteColumn();
      cookieColumn2 = table.rows[0].cells.length;   
    }
  }
  
}

function setCookie(cname, cvalue, exdays)  //Function from W3Schools
{
  var d = new Date();
  d.setTime(d.getTime() + (exdays*24*60*60*1000));
  var expires = "expires="+ d.toUTCString();
  document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}

function getCookie(cname) //Function from W3Schools
{
  var name = cname + "=";
  var decodedCookie = decodeURIComponent(document.cookie);
  var ca = decodedCookie.split(';');
  for(var i = 0; i <ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}

function deleteRow(){
var table = document.getElementById("Student");
var rlength = table.rows.length;
	if(rlength > 2){
		table.deleteRow(rlength-1);
	}
}

function deleteColumn(){
var table = document.getElementById("Student");
var rlength = table.rows.length;
var clength = table.rows[0].cells.length;

for(var i = 0; i <rlength;i++ ){
if(i < clength && clength > 3){
			table.rows[i].deleteCell(clength-2);
      }
  }
}

</script>

<style>
td {
  text-align: right;
}

 tbody td {
  font-size: 14px;
  background-color: #FFFFFF;
}
tbody td.name {
  text-align: left;
  background-color: #FFFFFF;
  border: 1px solid black;
  }

thead th {
  font-size: 15px;
  font-weight: bold;
  color: #000000;
  text-align: center;
}
tfoot {
  font-size: 14px;
  font-weight: normal;
  color: #FFFFFF;
  background: #D0E4F5;
  border-top: 2px solid #444444;
}
tfoot td {
  font-size: 14px;
}
input { 
    text-align: right; 
}

button {
    background: linear-gradient(rgb(234, 224, 194) 5%, rgb(204, 194, 166) 100%) rgb(234, 224, 194);
    border-radius: 15px;
    border: 2px solid rgb(51, 48, 41);
    display: inline-block;
    cursor: pointer;
    color: rgb(80, 87, 57);
    font-family: "Times new Roman", sans-serif;
    font-size: 14px;
    font-weight: bold;
    padding: 12px 16px;
    text-decoration: none;
    text-shadow: rgb(255, 255, 255) 0px 1px 0px;
}
</style>
